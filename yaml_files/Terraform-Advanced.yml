trigger:
- none


pool:
  vmImage: 'windows-latest'

stages:
  - stage: Development
    displayName: Dev
    jobs:
      - deployment: Deploy
        displayName: Deploy Dev Infrastructure
        environment: Dev
        variables:
          - group: var_arm
          - group: Common
          - group: Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced'
                    fileType: 'json'
                    targetFiles: 'parameter.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform
                  inputs:
                    terraformVersion: '1.0.9'
                - task: TerraformTaskV2@2
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    backendServiceARM: 'sp-devops-pipeline'
                    backendAzureRmResourceGroupName: '$(VAR_ARM.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(VAR_ARM.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(VAR_ARM.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(TerraformState.Name)'
                - task: TerraformTaskV2@2
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json"'
                    environmentServiceNameAzureRM: 'sp-devops-pipeline'
                - task: TerraformTaskV2@2
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json"'
                    environmentServiceNameAzureRM: 'sp-devops-pipeline'
                # - task: TerraformTaskV2@2
                #   displayName: Terraform Destroy
                #   inputs:
                #     provider: 'azurerm'
                #     command: 'destroy'
                #     commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                #     workingDirectory: 'Platform/Terraform-Advanced'
                #     environmentServiceNameAzureRM: 'sp-devops-pipeline'
  - stage: Test
    dependsOn: ''
    displayName: Tst
    jobs:
      - deployment: Deploy
        displayName: Deploy Test Infrastructure
        environment: Tst
        variables:
          - group: var_arm
          - group: Common
          - group: Tst
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced'
                    fileType: 'json'
                    targetFiles: 'parameter.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform
                  inputs:
                    terraformVersion: '1.0.9'
                - task: TerraformTaskV2@2
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    backendServiceARM: 'sp-devops-pipeline'
                    backendAzureRmResourceGroupName: '$(VAR_ARM.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(VAR_ARM.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(VAR_ARM.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(TerraformState.Name)'
                - task: TerraformTaskV2@2
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json"'
                    environmentServiceNameAzureRM: 'sp-devops-pipeline'
                - task: TerraformTaskV2@2
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json"'
                    environmentServiceNameAzureRM: 'sp-devops-pipeline'
                # - task: TerraformTaskV2@2
                #   displayName: Terraform Destroy
                #   inputs:
                #     provider: 'azurerm'
                #     command: 'destroy'
                #     workingDirectory: 'Platform/Terraform-Advanced'
                #     commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                #     environmentServiceNameAzureRM: 'sp-devops-pipeline'
  - stage: Deletion
    displayName: delete
    jobs:
      - deployment: Deploy
        displayName: Destroy Dev Infrastructure
        environment: delete
        variables:
          - group: var_arm
          - group: Common
          - group: Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced'
                    fileType: 'json'
                    targetFiles: 'parameter.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform
                  inputs:
                    terraformVersion: '1.0.9'
                - task: TerraformTaskV2@2
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    backendServiceARM: 'sp-devops-pipeline'
                    backendAzureRmResourceGroupName: '$(VAR_ARM.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(VAR_ARM.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(VAR_ARM.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(TerraformState.Name)'
                - task: TerraformTaskV2@2
                  displayName: Terraform Destroy
                  inputs:
                    provider: 'azurerm'
                    command: 'destroy'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/Platform/Terraform-Advanced/parameter.json'
                    workingDirectory: 'Platform/Terraform-Advanced'
                    environmentServiceNameAzureRM: 'sp-devops-pipeline'